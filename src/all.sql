--ONE TO MANY

CREATE TABLE mens(
                     id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY ,
                     age int  CHECK ( age > 0 ),
                     name varchar(228) NOT NULL ,
                     email varchar(228) NOT NULL  UNIQUE
);

CREATE TABLE Director
(
    director_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name        varchar(100) NOT NULL UNIQUE,
    age         int CHECK ( age > 10 )
);

CREATE TABLE movie
(
    movie_id           int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    director_id        int REFERENCES Director (director_id) NOT NULL,
    name               varchar(228)                          NOT NULL,
    year_of_production int CHECK ( year_of_production > 1900 )
);

INSERT INTO Director(name, age)
VALUES ('Ida Lupino', 45),
       ('Bong Joon Ho', 54),
       ('Guillermo del Toro', 71),
       ('David Cronenberg', 43),
       ('Sidney Lumet', 41),
       ('Woody Allen', 44);


INSERT INTO Movie(director_id, name, year_of_production)
VALUES (1, 'Reservoir Dogs', 1992);
INSERT INTO Movie(director_id, name, year_of_production)
VALUES (1, 'Pulp Fiction', 1994);
INSERT INTO Movie(director_id, name, year_of_production)
VALUES (1, 'The Hateful Eight', 2015);
INSERT INTO Movie(director_id, name, year_of_production)
VALUES (1, 'Once Upon a Time in Hollywood', 2019);
INSERT INTO Movie(director_id, name, year_of_production)
VALUES (2, 'Taxi Driver', 1976);
INSERT INTO Movie(director_id, name, year_of_production)
VALUES (2, 'Goodfellas', 1990);
INSERT INTO Movie(director_id, name, year_of_production)
VALUES (2, 'The Wolf of Wall Street', 2013);
INSERT INTO Movie(director_id, name, year_of_production)
VALUES (3, 'Lock, Stock and Two Smoking Barrels', 1998);
INSERT INTO Movie(director_id, name, year_of_production)
VALUES (3, 'Snatch', 2000);
INSERT INTO Movie(director_id, name, year_of_production)
VALUES (4, 'Midnight in Paris', 2011);
INSERT INTO Movie(director_id, name, year_of_production)
VALUES (6, 'Inception', 2010);


SELECT *
FROM director;
SELECT *
FROM movie;

SELECT Director.name, movie.name
FROM Director
         LEFT JOIN movie on Director.director_id = movie.director_id;

SELECT Director.name, m.name
FROM director
         LEFT JOIN movie m on Director.director_id = m.director_id;


--ONE TO One

CREATE TABLE Citizen
(
    citizen_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name       varchar(228) NOT NULL,
    age        int CHECK ( age > 16 )
);

CREATE TABLE passport
(
    person_id       int REFERENCES Citizen (citizen_id) PRIMARY KEY,
    passport_number int
);


INSERT INTO Citizen(name, age) VALUES ('Bob', 17);
INSERT INTO Citizen(name, age) VALUES ('Tom', 24);
INSERT INTO Citizen(name, age) VALUES ('Katy', 39);
INSERT INTO Citizen(name, age) VALUES ('Alice', 45);

INSERT INTO passport(person_id, passport_number) VALUES (2, 12345);
INSERT INTO Passport(person_id, passport_number) VALUES (4, 75124);
INSERT INTO Passport(person_id, passport_number) VALUES (5, 91245);
INSERT INTO Passport(person_id, passport_number) VALUES (6, 19259);

--мы не можем одному гражданину призначить 2 паспорта
INSERT INTO passport(person_id, passport_number) VALUES (2, 1233);

--INNER JOIN
SELECT Citizen.name, p.passport_number  FROM Citizen LEFT JOIN passport p on Citizen.citizen_id = p.person_id;


--Many to Many

CREATE TABLE Actor (
                       actor_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY ,
                       name varchar(228) NOT NULL UNIQUE ,
                       age  int  CHECK ( age > 0 )
);

INSERT INTO Actor(name, age) VALUES ('Harvey Keitel', 81);
INSERT INTO Actor(name, age) VALUES ('Robert De Niro', 77);
INSERT INTO Actor(name, age) VALUES ('Leonardo DiCaprio', 46);
INSERT INTO Actor(name, age) VALUES ('Jason Statham', 53);
INSERT INTO Actor(name, age) VALUES ('Joe Pesci', 77);
INSERT INTO Actor(name, age) VALUES ('Samuel L. Jackson', 72);

select * from Actor;

CREATE TABLE Actor_Movie(
                            actor_id int REFERENCES Actor(actor_id),
                            movie_id int REFERENCES movie(movie_id),
                            PRIMARY KEY (actor_id, movie_id)
);


INSERT INTO Actor_Movie VALUES(1, 1);
INSERT INTO Actor_Movie VALUES(1, 2);
INSERT INTO Actor_Movie VALUES(2, 5);
INSERT INTO Actor_Movie VALUES(2, 6);
INSERT INTO Actor_Movie VALUES(3, 4);
INSERT INTO Actor_Movie VALUES(3, 7);
INSERT INTO Actor_Movie VALUES(3, 11);
INSERT INTO Actor_Movie VALUES(4, 8);
INSERT INTO Actor_Movie VALUES(4, 9);
INSERT INTO Actor_Movie VALUES(5, 6);
INSERT INTO Actor_Movie VALUES(6, 2);
INSERT INTO Actor_Movie VALUES(6, 3);

SELECT Actor.name, Movie.name FROM Actor JOIN actor_movie
                                              ON actor.actor_id = actor_movie.actor_id JOIN movie
                                                                                            ON actor_movie.movie_id = movie.movie_id;

SELECT * from movie WHERE  movie_id = 1;

SELECT Actor.name, m.name FROM Actor JOIN movie m on Actor.actor_id = m.movie_id;

--DATABASE INDEXES

